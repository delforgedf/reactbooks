{"ast":null,"code":"var _jsxFileName = \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/src/components/book.js\";\nimport React, { PureComponent } from 'react';\nimport { PropTypes } from 'prop-types';\n\nvar Book = function Book(_ref) {\n  var book = _ref.book,\n      onChangeShelf = _ref.onChangeShelf;\n  var thumb = book.imageLinks ? book.imageLinks.thumbnail : 'https://via.placeholder.com/128x193.png';\n  return React.createElement(\"div\", {\n    className: \"book\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-cover\",\n    style: {\n      width: 128,\n      height: 193,\n      backgroundImage: \"url(\\\"\".concat(thumb, \"\\\")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"book-shelf-changer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    defaultValue: !book.shelf ? 'none' : book.shelf,\n    onChange: function onChange(e) {\n      return onChangeShelf(book, e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"move\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Move to...\"), React.createElement(\"option\", {\n    value: \"currentlyReading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Currently Reading\"), React.createElement(\"option\", {\n    value: \"wantToRead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Want to Read\"), React.createElement(\"option\", {\n    value: \"read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Read\"), React.createElement(\"option\", {\n    value: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"None\")))), React.createElement(\"div\", {\n    className: \"book-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, book.title), React.createElement(\"div\", {\n    className: \"book-authors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, book.authors && book.authors.map(function (author) {\n    return React.createElement(\"div\", {\n      key: book.id,\n      className: \"book-authors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, author);\n  })));\n};\n\nBook.propTypes = {\n  onChangeShelf: PropTypes.func.isRequired\n};\nexport default Book;","map":{"version":3,"sources":["/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/src/components/book.js"],"names":["React","PureComponent","PropTypes","Book","book","onChangeShelf","thumb","imageLinks","thumbnail","width","height","backgroundImage","shelf","e","target","value","title","authors","map","author","id","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA2B,YAA3B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA2B;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;AAEtC,MAAMC,KAAK,GAAGF,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAACG,UAAL,CAAgBC,SAAlC,GAA8C,yCAA5D;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,GAAtB;AAA2BC,MAAAA,eAAe,kBAAUL,KAAV;AAA1C,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,YAAY,EAAG,CAACF,IAAI,CAACQ,KAAN,GAAc,MAAd,GAAuBR,IAAI,CAACQ,KAD7C;AAEE,IAAA,QAAQ,EAAG,kBAAAC,CAAC;AAAA,aAAIR,aAAa,CAACD,IAAD,EAAMS,CAAC,CAACC,MAAF,CAASC,KAAf,CAAjB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF,CAFF,CADF,EAgBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BX,IAAI,CAACY,KAAlC,CAhBF,EAiBE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCZ,IAAI,CAACa,OAAL,IAAgBb,IAAI,CAACa,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM;AAAA,WACtC;AAAK,MAAA,GAAG,EAAEf,IAAI,CAACgB,EAAf;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CD,MAA7C,CADsC;AAAA,GAAvB,CADjB,CAjBF,CADF;AAyBD,CA7BD;;AA+BAhB,IAAI,CAACkB,SAAL,GAAiB;AACfhB,EAAAA,aAAa,EAAEH,SAAS,CAACoB,IAAV,CAAeC;AADf,CAAjB;AAGA,eAAepB,IAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { PropTypes }  from 'prop-types';\n\nconst Book = ({book , onChangeShelf})=> {\n  \n  const thumb = book.imageLinks ? book.imageLinks.thumbnail : 'https://via.placeholder.com/128x193.png';\n\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${thumb}\")` }}></div>\n        <div className=\"book-shelf-changer\">\n          <select \n            defaultValue={ !book.shelf ? 'none' : book.shelf}\n            onChange={ e => onChangeShelf(book,e.target.value)}\n          >\n            <option value=\"move\" disabled>Move to...</option>\n            <option value=\"currentlyReading\">Currently Reading</option>\n            <option value=\"wantToRead\">Want to Read</option>\n            <option value=\"read\">Read</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"book-title\">{book.title}</div>\n      <div className=\"book-authors\">\n      {book.authors && book.authors.map(author => \n        <div key={book.id} className=\"book-authors\">{author}</div>\n      )}\n      </div>\n    </div>\n  )\n}\n\nBook.propTypes = {\n  onChangeShelf: PropTypes.func.isRequired,\n}\nexport default Book;"]},"metadata":{},"sourceType":"module"}