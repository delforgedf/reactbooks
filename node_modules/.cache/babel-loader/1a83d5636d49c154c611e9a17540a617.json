{"ast":null,"code":"import _classCallCheck from \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/src/App.js\";\nimport React, { Component } from 'react';\nimport * as api from './api/BooksAPI';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport List from './components/list';\nimport Search from './components/search';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksApp, _Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.onChangeShelf = function (_ref) {\n      var event = _ref.event;\n      console.log(props);\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      api.getAll().then(function (books) {\n        _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    //   api\n    //     .update(args.book, args.shelf)\n    //     .then(data => {\n    //       try {\n    //         if (!data) {\n    //           throw new Error('Error on update book status.');\n    //         }\n    //         const newBooks = [...this.state.books, args.book];\n    //         this.setState({ books: newBooks });\n    //         console.log('foi');\n    //       } catch (error) {\n    //         console.log('deu pau');\n    //       }\n    //     });\n    // }\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(List, {\n            books: _this3.state.books // onChangeShelf={this.onChangeShelf({})}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(Search, {\n            onChangeShelf: function onChangeShelf(event, book) {\n              return _this3.onChangeShelf(event, book);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/jonatasdelforge/Documents/reactnd-project-myreads-starter/src/App.js"],"names":["React","Component","api","Route","List","Search","BooksApp","state","books","onChangeShelf","event","console","log","props","getAll","then","setState","book"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAmC,OAAnC;AACA,OAAO,KAAKC,GAAZ,MAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAcRC,a,GAAgB,gBAAgB;AAAA,UAAbC,KAAa,QAAbA,KAAa;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,K;;;;;;;wCAZmB;AAAA;;AAClBX,MAAAA,GAAG,CACAY,MADH,GAEGC,IAFH,CAEQ,UAAAP,KAAK,EAAI;AACb,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZR,UAAAA,KAAK,EAALA;AADY,SAAd;AAGD,OANH;AAOD;;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACG,QAAA,KAAK,MADR;AAEG,QAAA,IAAI,EAAC,GAFR;AAGG,QAAA,MAAM,EAAE;AAAA,iBACN,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWC,KADpB,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAWE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,MAAM,EAAE;AAAA,iBACN,oBAAC,MAAD;AACE,YAAA,aAAa,EAAE,uBAACE,KAAD,EAAQO,IAAR;AAAA,qBAAiB,MAAI,CAACR,aAAL,CAAmBC,KAAnB,EAA0BO,IAA1B,CAAjB;AAAA,aADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAuBD;;;;EA3DoBhB,S;;AA8DvB,eAAeK,QAAf","sourcesContent":["import React , { Component }  from 'react'\nimport * as api from './api/BooksAPI'\nimport { Route } from 'react-router-dom';\nimport './App.css'\nimport List from './components/list';\nimport Search from './components/search'\n\nclass BooksApp extends Component {\n    \n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    api\n      .getAll()\n      .then(books => {\n        this.setState({\n          books\n         })\n      });\n  }\n\n  onChangeShelf = ({ event } ) => {\n    console.log(props);\n  }\n  //   api\n  //     .update(args.book, args.shelf)\n  //     .then(data => {\n  //       try {\n  //         if (!data) {\n  //           throw new Error('Error on update book status.');\n  //         }\n  //         const newBooks = [...this.state.books, args.book];\n  //         this.setState({ books: newBooks });\n  //         console.log('foi');\n  //       } catch (error) {\n  //         console.log('deu pau');\n  //       }\n  //     });\n  // }\n\n  render() {\n    return (\n      <div className=\"app\">\n       <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <List\n              books={this.state.books}\n              // onChangeShelf={this.onChangeShelf({})}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/search\"\n          render={() => (\n            <Search\n              onChangeShelf={(event, book) => this.onChangeShelf(event, book)}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}